/*
 * This file is generated by jOOQ.
 */
package com.side.infrastructure.jooq.generated.tables.records;

import java.time.Instant;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import com.side.infrastructure.jooq.generated.tables.Notice;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class NoticeRecord extends UpdatableRecordImpl<NoticeRecord> {

	private static final long serialVersionUID = 1L;

	/**
	 * Create a detached NoticeRecord
	 */
	public NoticeRecord() {
		super(Notice.NOTICE);
	}

	/**
	 * Create a detached, initialised NoticeRecord
	 */
	public NoticeRecord(Long id, String title, String contents, Long likes, Long dislikes, Instant createdAt,
		Long createdBy, Instant modifiedAt, Long modifiedBy) {
		super(Notice.NOTICE);

		setId(id);
		setTitle(title);
		setContents(contents);
		setLikes(likes);
		setDislikes(dislikes);
		setCreatedAt(createdAt);
		setCreatedBy(createdBy);
		setModifiedAt(modifiedAt);
		setModifiedBy(modifiedBy);
		resetChangedOnNotNull();
	}

	/**
	 * Getter for <code>test_db.notice.id</code>. 공지사항 ID
	 */
	public Long getId() {
		return (Long)get(0);
	}

	/**
	 * Setter for <code>test_db.notice.id</code>. 공지사항 ID
	 */
	public void setId(Long value) {
		set(0, value);
	}

	/**
	 * Getter for <code>test_db.notice.title</code>. 게시글 제목
	 */
	public String getTitle() {
		return (String)get(1);
	}

	/**
	 * Setter for <code>test_db.notice.title</code>. 게시글 제목
	 */
	public void setTitle(String value) {
		set(1, value);
	}

	/**
	 * Getter for <code>test_db.notice.contents</code>. 게시글 내용
	 */
	public String getContents() {
		return (String)get(2);
	}

	/**
	 * Setter for <code>test_db.notice.contents</code>. 게시글 내용
	 */
	public void setContents(String value) {
		set(2, value);
	}

	/**
	 * Getter for <code>test_db.notice.likes</code>. 좋아요 수
	 */
	public Long getLikes() {
		return (Long)get(3);
	}

	/**
	 * Setter for <code>test_db.notice.likes</code>. 좋아요 수
	 */
	public void setLikes(Long value) {
		set(3, value);
	}

	/**
	 * Getter for <code>test_db.notice.dislikes</code>. 싫어요 수
	 */
	public Long getDislikes() {
		return (Long)get(4);
	}

	/**
	 * Setter for <code>test_db.notice.dislikes</code>. 싫어요 수
	 */
	public void setDislikes(Long value) {
		set(4, value);
	}

	/**
	 * Getter for <code>test_db.notice.created_at</code>. 생성일시
	 */
	public Instant getCreatedAt() {
		return (Instant)get(5);
	}

	/**
	 * Setter for <code>test_db.notice.created_at</code>. 생성일시
	 */
	public void setCreatedAt(Instant value) {
		set(5, value);
	}

	/**
	 * Getter for <code>test_db.notice.created_by</code>. 생성자
	 */
	public Long getCreatedBy() {
		return (Long)get(6);
	}

	/**
	 * Setter for <code>test_db.notice.created_by</code>. 생성자
	 */
	public void setCreatedBy(Long value) {
		set(6, value);
	}

	/**
	 * Getter for <code>test_db.notice.modified_at</code>. 수정일시
	 */
	public Instant getModifiedAt() {
		return (Instant)get(7);
	}

	/**
	 * Setter for <code>test_db.notice.modified_at</code>. 수정일시
	 */
	public void setModifiedAt(Instant value) {
		set(7, value);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * Getter for <code>test_db.notice.modified_by</code>. 수정자
	 */
	public Long getModifiedBy() {
		return (Long)get(8);
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Setter for <code>test_db.notice.modified_by</code>. 수정자
	 */
	public void setModifiedBy(Long value) {
		set(8, value);
	}

	@Override
	public Record1<Long> key() {
		return (Record1)super.key();
	}
}
