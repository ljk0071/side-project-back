/*
 * This file is generated by jOOQ.
 */
package com.side.infrastructure.jooq.generated.tables.records;

import java.time.Instant;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import com.side.domain.enums.UserStatus;
import com.side.infrastructure.jooq.generated.enums.UserType;
import com.side.infrastructure.jooq.generated.tables.User;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class UserRecord extends UpdatableRecordImpl<UserRecord> {

	private static final long serialVersionUID = 1L;

	/**
	 * Create a detached UserRecord
	 */
	public UserRecord() {
		super(User.USER);
	}

	/**
	 * Create a detached, initialised UserRecord
	 */
	public UserRecord(Long uniqueId, String userId, String password, String name, String phoneNumber, String email,
		UserStatus status, UserType type, String description, Instant createdAt, Long createdBy, Instant modifiedAt,
		Long modifiedBy) {
		super(User.USER);

		setUniqueId(uniqueId);
		setUserId(userId);
		setPassword(password);
		setName(name);
		setPhoneNumber(phoneNumber);
		setEmail(email);
		setStatus(status);
		setType(type);
		setDescription(description);
		setCreatedAt(createdAt);
		setCreatedBy(createdBy);
		setModifiedAt(modifiedAt);
		setModifiedBy(modifiedBy);
		resetChangedOnNotNull();
	}

	/**
	 * Getter for <code>test_db.user.unique_id</code>. 유저 고유 ID
	 */
	public Long getUniqueId() {
		return (Long)get(0);
	}

	/**
	 * Setter for <code>test_db.user.unique_id</code>. 유저 고유 ID
	 */
	public void setUniqueId(Long value) {
		set(0, value);
	}

	/**
	 * Getter for <code>test_db.user.user_id</code>. 유저 ID
	 */
	public String getUserId() {
		return (String)get(1);
	}

	/**
	 * Setter for <code>test_db.user.user_id</code>. 유저 ID
	 */
	public void setUserId(String value) {
		set(1, value);
	}

	/**
	 * Getter for <code>test_db.user.password</code>. 비밀번호
	 */
	public String getPassword() {
		return (String)get(2);
	}

	/**
	 * Setter for <code>test_db.user.password</code>. 비밀번호
	 */
	public void setPassword(String value) {
		set(2, value);
	}

	/**
	 * Getter for <code>test_db.user.name</code>. 이름
	 */
	public String getName() {
		return (String)get(3);
	}

	/**
	 * Setter for <code>test_db.user.name</code>. 이름
	 */
	public void setName(String value) {
		set(3, value);
	}

	/**
	 * Getter for <code>test_db.user.phone_number</code>. 핸드폰번호
	 */
	public String getPhoneNumber() {
		return (String)get(4);
	}

	/**
	 * Setter for <code>test_db.user.phone_number</code>. 핸드폰번호
	 */
	public void setPhoneNumber(String value) {
		set(4, value);
	}

	/**
	 * Getter for <code>test_db.user.email</code>. 이메일
	 */
	public String getEmail() {
		return (String)get(5);
	}

	/**
	 * Setter for <code>test_db.user.email</code>. 이메일
	 */
	public void setEmail(String value) {
		set(5, value);
	}

	/**
	 * Getter for <code>test_db.user.status</code>. 상태
	 */
	public UserStatus getStatus() {
		return (UserStatus)get(6);
	}

	/**
	 * Setter for <code>test_db.user.status</code>. 상태
	 */
	public void setStatus(UserStatus value) {
		set(6, value);
	}

	/**
	 * Getter for <code>test_db.user.type</code>. 타입
	 */
	public UserType getType() {
		return (UserType)get(7);
	}

	/**
	 * Setter for <code>test_db.user.type</code>. 타입
	 */
	public void setType(UserType value) {
		set(7, value);
	}

	/**
	 * Getter for <code>test_db.user.description</code>. 설명
	 */
	public String getDescription() {
		return (String)get(8);
	}

	/**
	 * Setter for <code>test_db.user.description</code>. 설명
	 */
	public void setDescription(String value) {
		set(8, value);
	}

	/**
	 * Getter for <code>test_db.user.created_at</code>. 생성일시
	 */
	public Instant getCreatedAt() {
		return (Instant)get(9);
	}

	/**
	 * Setter for <code>test_db.user.created_at</code>. 생성일시
	 */
	public void setCreatedAt(Instant value) {
		set(9, value);
	}

	/**
	 * Getter for <code>test_db.user.created_by</code>. 생성자
	 */
	public Long getCreatedBy() {
		return (Long)get(10);
	}

	/**
	 * Setter for <code>test_db.user.created_by</code>. 생성자
	 */
	public void setCreatedBy(Long value) {
		set(10, value);
	}

	/**
	 * Getter for <code>test_db.user.modified_at</code>. 수정일시
	 */
	public Instant getModifiedAt() {
		return (Instant)get(11);
	}

	/**
	 * Setter for <code>test_db.user.modified_at</code>. 수정일시
	 */
	public void setModifiedAt(Instant value) {
		set(11, value);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * Getter for <code>test_db.user.modified_by</code>. 수정자
	 */
	public Long getModifiedBy() {
		return (Long)get(12);
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Setter for <code>test_db.user.modified_by</code>. 수정자
	 */
	public void setModifiedBy(Long value) {
		set(12, value);
	}

	@Override
	public Record1<Long> key() {
		return (Record1)super.key();
	}
}
